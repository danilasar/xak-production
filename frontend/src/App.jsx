import React, { useEffect, useState } from 'react'
import { Button } from '@mui/material'
import './App.css'
import Navbar from "./components/Navbar/Navbar"
import AuthPage from './pages/AuthPage/AuthPage'
import RegPage from './pages/RegPage/RegPage'
import HomePage from "./pages/HomePage/HomePage"
import ProfilePage from './pages/ProfilePage/ProfilePage'
import CoursesPage from './pages/CoursesPage/CoursesPage'
import CoursePage from './pages/CoursePage/CoursePage'
import MyCoursesPage from './pages/MyCoursesPage/MyCoursesPage'
import LeaderboardPage from './pages/LeaderboardPage/LeaderboardPage'
import { HomeRounded, SchoolRounded, LeaderboardRounded } from '@mui/icons-material'
import TaskPage from './components/TaskPage/TaskPage'

const App = () => {
  const [tab, setTab] = useState("Курсы")
  const [user, setUser] = useState(null)

/*{
    id: 1,
    role: 1,
    username: "gryazniy_abobus228",
    password: "jopaspisey228"
  } */

  /*useEffect(() => {
    const handleUserChanged = () => {
      setUser(fetch(null))
    }
  })*/

  const handleAuth = () => {
    setTab("auth")
  }

  const coursesList = [{
    id: 6,
    owner_id: 101,
    title: "Алгоритм быстрой сортировки",
    description: "Курс по алгоритму быстрой сортировки предназначен для тех, кто хочет погрузиться в увлекательный мир алгоритмов сортировки и улучшить свои навыки программирования. В рамках курса вы узнаете: Принцип работы алгоритма быстрой сортировки: какие шаги нужно выполнить, чтобы правильно отсортировать массив данных. Реализацию алгоритма на языке программирования Python или других языках. Основные принципы работы алгоритма, его эффективность и сложность. Методы оптимизации алгоритма для увеличения производительности.Практические примеры использования алгоритма быстрой сортировки для решения задач сортировки данных. Курс поможет вам углубленно изучить алгоритм быстрой сортировки, разобраться в его особенностях и применении. После его прохождения вы сможете успешно применять данный алгоритм к различным задачам в программировании.",
    is_open: true,
    category: ["Sorts", "Algorithms"],
    tasks: [
        {
          id: 7,
          course_id: 5,
          title: "Алгоритм быстрой сортировки",
          description: "Реализуйте алгоритм быстрой сортировки: ",
          tests: {
            "2 5 1 10 3": "1 2 3 5 10",
            "4 3 9 10": "3 4 9 10",
            "1 2 3": "1 2 3"
          },
          maxGrade: 5
        }
      ]
},
{
  id: 7,
  owner_id: 102,
  title: "Алгоритм бинарного поиска",
  description: "Курс по алгоритму бинарного поиска предназначен для тех, кто хочет углубить свои знания в области поиске данных. Во время обучения на курсе вы изучите принципы работы бинарного поиска, научитесь его реализовывать на практике и поймете, как он отличается от других алгоритмов поиска. Курс включает в себя теоретические лекции, практические занятия и задания на самостоятельную работу. Вы узнаете, как эффективно применять бинарный поиск для обработки больших объемов данных и оптимизировать ее производительность. Также вы изучите различные варианты реализации этого алгоритма и научитесь выбирать наиболее подходящий для конкретной задачи. По окончании курса вы получите уверенные навыки работы с алгоритмом бинарного поиска и сможете успешно применять их в своем профессиональном деле.",
  is_open: true,
  category: ["Algorithms", "BinSearch"],
    tasks: [
        {
          id: 7,
          course_id: 5,
          title: "Алгоритм бинарного поиска",
          description: "Верните индекс найденного значения: ",
          tests: {
            "1 2 5 9 10\n2": "1",
            "3 4 9 10 \n9": "2",
            "1 2 3\n3": "2"
          },
          maxGrade: 5
        }
      ]
},
{
  id: 8,
  owner_id: 103,
  title: "Алгоритмы и структуры данных",
  description: "Курс по алгоритмам и структурам данных предназначен для тех, кто хочет углубить свои знания в области компьютерных наук и разработки программного обеспечения. Во время обучения на курсе вы изучите основные алгоритмы сортировки, поиска, графов и многие другие, а также основные структуры данных – массивы, связанные списки, деревья и хеш-таблицы. Курс включает в себя как теоретические лекции, так и практические занятия, на которых вы будете применять изученные алгоритмы и структуры данных на практике. Вы узнаете, как выбирать и эффективно применять подходящие алгоритмы и структуры данных для решения конкретных задач, а также научитесь оптимизировать свой код. По окончании курса вы получите глубокие знания в области алгоритмов и структур данных, которые помогут вам стать успешным разработчиком программного обеспечения и решать сложные задачи эффективно и профессионально.",
  is_open: true,
  category: ["Algorithms", "Data structures"]
},
{
    id: 10,
    owner_id: 150,
    title: "Деревья ",
    description: "\"Деревья\" Курс по деревьям представляет собой обширный курс, посвященный изучению различных типов деревьев и их применению в программировании и компьютерных науках. В рамках курса вы изучите основные понятия и структуры деревьев, такие как бинарные деревья, деревья поиска, красно-черные деревья, AVL-деревья, B-деревья и другие. Вы изучите различные методы обхода деревьев, включая прямой, обратный и симметричный обход, освоите основные алгоритмы работы с деревьями, такие как поиск элемента, вставка, удаление, балансировка и др. Кроме того, вы изучите основные понятия высоты и глубины деревьев, а также узнаете, как эффективно использовать деревья в различных задачах, таких как поиск, сортировка, хранение данных и т. д. Курс по деревьям подойдет как начинающим программистам, так и опытным специалистам, желающим углубить свои знания в области структур данных. По завершении курса вы сможете успешно применять деревья в своих проектах и задачах, что повысит ваш профессионализм и эффективность работы как программиста. ",
    is_open: true,
    category: ["Алгоритмы", "Деревья"]
},
{
    id: 11,
    owner_id: 151,
    title: "Графы",
    description: "\"Графы\" Курс по графам представляет собой изучение теории и практики работы с графами – математической структурой, состоящей из вершин и ребер, которая позволяет моделировать различные отношения и связи между объектами. Графы широко применяются в различных областях, таких как компьютерные науки, социология, биоинформатика, транспорт и др. В рамках курса студенты изучают основные понятия и свойства графов, такие как графическое представление, алгоритмы обхода и поиска путей, связность, деревья, циклы, планарность и др. Также в программу включены практические задания и проекты, в которых студенты могут применить полученные знания на практике. Курс по графам обладает большим практическим значением и поможет студентам развить навыки анализа данных, программирования и решения задач в различных областях. В результате прохождения курса студенты смогут успешно применять графы в своей деятельности и решать разнообразные задачи, связанные с моделированием связей между объектами. ",
    is_open: true,
    category: ["Алгоритмы", "Деревья"]
},
{
    id: 6,
    owner_id: 101,
    title: "Что такое микросервисы?",
    description: "\"Микросервисы\" Курс Микросервисы предназначен для тех, кто хочет изучить и понять принципы разработки и использования микросервисной архитектуры в приложениях. Студенты научатся разрабатывать микросервисы, которые могут быть легко масштабированы и обновлены независимо друг от друга. Они изучат основные понятия и принципы работы микросервисов, такие как декомпозиция приложения на отдельные сервисы, использование API для взаимодействия между сервисами, контейнеризация и управление сервисами в облаке. Курс также включает в себя практические задания и проекты, которые помогут студентам применить полученные знания на практике. В конечном итоге, успешное прохождение курса поможет студентам стать экспертами в разработке микросервисов и увеличит их шансы на успешную карьеру в области программирования и разработки ПО.",
    is_open: true,
    category: ["Microservices", "Architecture"]
}]

  const getTaskID = () => {
    const regex = /\d+/g;
    return tab.match(regex) || [];
  }

  return (
    <>
      <Navbar current={tab}
              setUser={setUser}
              onClick={setTab} 
              tabs={[["Главная", <HomeRounded />], ["Курсы", <SchoolRounded />], ["Лидерборды", <LeaderboardRounded />]]}
              sessionUser={user}
              handleAuth={handleAuth}/>
      <main>
      { tab === "Главная" && <HomePage /> }
      { tab === "Курсы" && <CoursesPage coursesList={coursesList} setTab={setTab}/> }
      { tab === "Лидерборды" && <LeaderboardPage /> }
      { tab === "Мой профиль" && <ProfilePage /> }
      { tab === "Мои курсы" && <MyCoursesPage /> }
      { tab === "auth" && <AuthPage setTab={setTab} />}
      { tab === "reg" && <RegPage setTab={setTab} />}
      { /^course\d+$/.test(tab) && <CoursePage setTab={setTab} course={coursesList.filter((item) => String(item.id) === tab.slice(6))[0]} /> }
      { /course\d+task\d+/.test(tab) && <TaskPage setTab={setTab} task={coursesList.filter(item => String(item.id) === getTaskID()[0])[0].tasks.filter(item => String(item.id) === getTaskID()[1])[0]} /> }
      </main>
    </>
  )
}

export default App
